aliases:
  - &only-source
    branches:
      only: source

  - &only-staging-source
    branches:
      only: staging-source

  - &non-deployment-branches
    branches:
      ignore:
        - master
        - staging

  - &build-site
    run:
      name: Build Site
      command: |
        git config --global user.email "devhub-deploy@users.noreply.github.com"
        git config --global user.name "Devhub Deployer"
        # install Docusaurus and generate file of English strings
        cd website && yarn install && yarn run write-translations && cd ..
        # crowdin install
        sudo apt-get update && sudo apt-get install default-jre
        wget https://artifacts.crowdin.com/repo/deb/crowdin3.deb -O crowdin.deb
        sudo dpkg -i crowdin.deb
        # translations upload/download
        crowdin upload sources --auto-update -b master
        crowdin download --verbose -b master
        # also check the current translation status
        crowdin status

version: 2
jobs:
  deploy-to-prod:
    docker:
      # specify the version you desire here
      - image: circleci/node:erbium
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a1:f6:36:72:14:54:c0:37:47:fe:0f:c1:01:7f:21:f5"
      - checkout
      - *build-site
      - run:
          name: Push to Production (Github Pages)
          command: cd website && USE_SSH=true GIT_USER=git yarn run publish-gh-pages

  deploy-to-staging:
    docker:
      # specify the version you desire here
      - image: circleci/node:erbium
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a1:f6:36:72:14:54:c0:37:47:fe:0f:c1:01:7f:21:f5"
      - checkout
      - *build-site
      - run:
          name: Push to Staging (Heroku)
          command: scripts/deploy-staging

  check-build:
    docker:
      # specify the version you desire here
      - image: circleci/node:erbium
    steps:
      - checkout
      - run:
          name: Check if Site Builds
          command: |
            cd website && yarn install && yarn run write-translations && yarn build

  check-links:
      docker:
        - image: web3f/link-checker:v1.0.1
      steps:
        - checkout
        - run:
            name: build
            working_directory: website
            command: |
              yarn
        - run:
            name: serve
            working_directory: website
            background: true
            command: |
              yarn start
        - run:
            name: wait serve
            command: |
              while ! nc -z localhost 3000; do
                sleep 1
                echo waiting for website to start...
              done
        - run:
            name: check links
            command: |
              linkchecker --ignore-url="^(?:(?!\/en\/).)*$" --check-extern http://localhost:3000/

workflows:
  version: 2
  check_n_deploy:
    jobs:
      - check-build:
          filters: *non-deployment-branches
      - check-links:
          filters: *non-deployment-branches
      - deploy-to-prod:
          filters: *only-source
          requires:
            - check-build
      - deploy-to-staging:
          filters: *only-staging-source
          requires:
            - check-build

  nightly_deploy:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters: *only-source
    jobs:
      - deploy-to-prod
